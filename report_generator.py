import os
import joblib
import pandas as pd
import numpy as np
from tabulate import tabulate
from sklearn.metrics import (
    mean_squared_error, mean_absolute_error, r2_score,
    roc_auc_score, f1_score, accuracy_score
)

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø ---
BASE_DIR = os.path.dirname(os.path.abspath(__file__)) if "__file__" in locals() else "."
FINAL_DATA_PATH = os.path.join(BASE_DIR, "data/eda_gen/data_final.csv")
MODELS_DIR = os.path.join(BASE_DIR, "models")
FEATURES_DIR = os.path.join(BASE_DIR, "features")

TASKS = {
    # –ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è
    "clf_ic50nm_median": {
        "type": "classification", "folder": "clf_ic50_median",
        "task_name_full": "clf_ic50nm_median_mi_top99_tuned_stack", "model_name": "catboost",
        "target_col": "IC50_gt_median", "display_name": "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è IC50 > Median"
    },
    "clf_cc50nm_median": {
        "type": "classification", "folder": "clf_cc50_median",
        "task_name_full": "clf_cc50nm_median_mi_top99_tuned_stack", "model_name": "xgboost",
        "target_col": "CC50_gt_median", "display_name": "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è CC50 > Median"
    },
    "clf_si_median": {
        "type": "classification", "folder": "clf_si_median",
        "task_name_full": "clf_si_median", "model_name": "xgboost",
        "target_col": "SI_gt_median", "display_name": "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è SI > Median"
    },
    "clf_si_gt8": {
        "type": "classification", "folder": "clf_si_gt8",
        "task_name_full": "clf_si_gt8", "model_name": "",
        "target_col": "SI_gt_8", "display_name": "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è SI > 8"
    },
    # –†–µ–≥—Ä–µ—Å—Å–∏—è
    "reg_log1p_IC50_nM": {
        "type": "regression", "folder": os.path.join("regression", "reg_log1p_IC50_nM"),
        "task_name_full": "reg_log1p_IC50_nM", "model_name": "model",
        "target_col": "log1p_IC50_nM", "display_name": "–†–µ–≥—Ä–µ—Å—Å–∏—è log(IC50)"
    },
    "reg_log1p_CC50_nM": {
        "type": "regression", "folder": os.path.join("regression", "reg_log1p_CC50_nM"),
        "task_name_full": "reg_log1p_CC50_nM", "model_name": "model",
        "target_col": "log1p_CC50_nM", "display_name": "–†–µ–≥—Ä–µ—Å—Å–∏—è log(CC50)"
    },
    "reg_si": {
        "type": "regression", "folder": os.path.join("regression", "reg_si"),
        "task_name_full": "reg_si", "model_name": "model",
        "target_col": "log1p_SI", "display_name": "–†–µ–≥—Ä–µ—Å—Å–∏—è log(SI)"
    }
}

# --- –†–∞—Å—á–µ—Ç –º–µ—Ç—Ä–∏–∫ ---
regression_results = {}
classification_results = {}

for task_key, cfg in TASKS.items():
    try:
        # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –ø—É—Ç–µ–π
        if cfg['type'] == 'classification':
            t_name, m_name = cfg['task_name_full'], cfg['model_name']
            f_name = f"model_{t_name}_{m_name}.joblib" if m_name else f"model_{t_name}.joblib"
            model_path = os.path.join(MODELS_DIR, cfg['folder'], f_name)
            if task_key == 'clf_si_gt8':
                features_path = os.path.join(MODELS_DIR, cfg['folder'], 'features.joblib')
            else:
                features_path = os.path.join(FEATURES_DIR, f"selected_by_shap_{t_name}.txt")
        else: # regression
            model_path = os.path.join(MODELS_DIR, cfg['folder'], f"{cfg['task_name_full']}_model.joblib")
            features_path = os.path.join(MODELS_DIR, cfg['folder'], f"{cfg['task_name_full']}_features.joblib")

        # –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç–æ–≤
        model = joblib.load(model_path)
        features = joblib.load(features_path) if features_path.endswith('.joblib') else pd.read_csv(features_path).iloc[:, 0].tolist()
        df = pd.read_csv(FINAL_DATA_PATH)
        
        X = df[features]; y = df[cfg['target_col']]; y_pred = model.predict(X)

        if cfg["type"] == "regression":
            r2, rmse, mae = r2_score(y, y_pred), np.sqrt(mean_squared_error(y, y_pred)), mean_absolute_error(y, y_pred)
            regression_results[task_key] = {"R¬≤": r2, "RMSE": rmse, "MAE": mae}
        else:
            y_proba = model.predict_proba(X)[:, 1]
            auc, f1, acc = roc_auc_score(y, y_proba), f1_score(y, y_pred), accuracy_score(y, y_pred)
            classification_results[task_key] = {"ROC AUC": auc, "F1": f1, "Accuracy": acc}
    except Exception as e:
        print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –∑–∞–¥–∞—á–∏ {task_key}: {e}")

# --- –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Ç–∞–±–ª–∏—Ü –¥–ª—è –≤—ã–≤–æ–¥–∞ ---
regression_table = [[TASKS[k]['display_name'], f"{v['R¬≤']:.3f}", f"{v['RMSE']:.3f}", f"{v['MAE']:.3f}"] for k, v in regression_results.items()]
classification_table = [[TASKS[k]['display_name'], f"{v['ROC AUC']:.3f}", f"{v['F1']:.3f}", f"{v['Accuracy']:.3f}"] for k, v in classification_results.items()]

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ ---
report_text = f"""
==============================================================================
            –ê–ù–ê–õ–ò–¢–ò–ß–ï–°–ö–ò–ô –û–¢–ß–ï–¢ –ü–û –ö–£–†–°–û–í–û–ô –†–ê–ë–û–¢–ï
==============================================================================

### 1. –í–≤–µ–¥–µ–Ω–∏–µ

–¶–µ–ª—å—é –¥–∞–Ω–Ω–æ–π —Ä–∞–±–æ—Ç—ã —è–≤–ª—è–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –æ—Ü–µ–Ω–∫–∞ –º–æ–¥–µ–ª–µ–π –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞–Ω–∏—è –∫–ª—é—á–µ–≤—ã—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π (IC50, CC50, SI) –ø—Ä–æ—Ç–∏–≤ –≤–∏—Ä—É—Å–∞ –≥—Ä–∏–ø–ø–∞. –ë—ã–ª–æ —Ä–µ—à–µ–Ω–æ 7 –∑–∞–¥–∞—á: 3 –∑–∞–¥–∞—á–∏ —Ä–µ–≥—Ä–µ—Å—Å–∏–∏ –¥–ª—è –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è —Å–∞–º–∏—Ö –∑–Ω–∞—á–µ–Ω–∏–π –∏ 4 –∑–∞–¥–∞—á–∏ –±–∏–Ω–∞—Ä–Ω–æ–π –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è, –ø—Ä–µ–≤—ã—à–∞—é—Ç –ª–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∑–∞–¥–∞–Ω–Ω—ã–µ –ø–æ—Ä–æ–≥–∏ (–º–µ–¥–∏–∞–Ω—É –∏–ª–∏ —Å—Ç–∞—Ç–∏—á–µ—Å–∫–æ–µ –∑–Ω–∞—á–µ–Ω–∏–µ 8 –¥–ª—è SI).

### 2. –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è

–î–ª—è –¥–æ—Å—Ç–∏–∂–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –±—ã–ª –ø—Ä–∏–º–µ–Ω–µ–Ω –∫–æ–º–ø–ª–µ–∫—Å–Ω—ã–π –ø–æ–¥—Ö–æ–¥, –≤–∫–ª—é—á–∞—é—â–∏–π –Ω–µ—Å–∫–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤—ã—Ö —ç—Ç–∞–ø–æ–≤:

**2.1. –ò—Å—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–π –∞–Ω–∞–ª–∏–∑ –¥–∞–Ω–Ω—ã—Ö (EDA):**
- –ü—Ä–æ–≤–µ–¥–µ–Ω–∞ –æ—á–∏—Å—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö: —É–¥–∞–ª–µ–Ω—ã –¥—É–±–ª–∏–∫–∞—Ç—ã, –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –ø—Ä–æ–ø—É—Å–∫–∏.
- –í—ã–ø–æ–ª–Ω–µ–Ω–æ –ª–æ–≥–∞—Ä–∏—Ñ–º–∏—á–µ—Å–∫–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —Ü–µ–ª–µ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö (`log1p`) –¥–ª—è –Ω–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏–∏ –∏—Ö —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∏ —É–º–µ–Ω—å—à–µ–Ω–∏—è –≤–ª–∏—è–Ω–∏—è –≤—ã–±—Ä–æ—Å–æ–≤.
- –°–∏—Å—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏ —É–¥–∞–ª–µ–Ω—ã –≤—ã–±—Ä–æ—Å—ã –≤ —Ü–µ–ª–µ–≤—ã—Ö –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –º–µ—Ç–æ–¥–∞ –º–µ–∂–∫–≤–∞—Ä—Ç–∏–ª—å–Ω–æ–≥–æ —Ä–∞–∑–º–∞—Ö–∞ (IQR).
- –°–æ–∑–¥–∞–Ω—ã –Ω–æ–≤—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏ (feature engineering) –¥–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —É–ª—É—á—à–µ–Ω–∏—è –∫–∞—á–µ—Å—Ç–≤–∞ –º–æ–¥–µ–ª–µ–π.
- –û—Ç—Ñ–∏–ª—å—Ç—Ä–æ–≤–∞–Ω—ã –Ω–µ–∏–Ω—Ñ–æ—Ä–º–∞—Ç–∏–≤–Ω—ã–µ –ø—Ä–∏–∑–Ω–∞–∫–∏: –∫–æ–Ω—Å—Ç–∞–Ω—Ç–Ω—ã–µ, —Å –Ω–∏–∑–∫–æ–π –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç—å—é –∏ —Å –≤—ã—Å–æ–∫–æ–π –≤–∑–∞–∏–º–Ω–æ–π –∫–æ—Ä—Ä–µ–ª—è—Ü–∏–µ–π (r > 0.95), —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –º—É–ª—å—Ç–∏–∫–æ–ª–ª–∏–Ω–µ–∞—Ä–Ω–æ—Å—Ç–∏.

**2.2. –û—Ç–±–æ—Ä –ø—Ä–∏–∑–Ω–∞–∫–æ–≤:**
- –î–ª—è –∫–∞–∂–¥–æ–π –∏–∑ 7 –∑–∞–¥–∞—á –±—ã–ª —Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω —Å–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –Ω–∞–±–æ—Ä –Ω–∞–∏–±–æ–ª–µ–µ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ —Å –ø–æ–º–æ—â—å—é –º–µ—Ç–æ–¥–∞ Mutual Information, —á—Ç–æ –ø–æ–∑–≤–æ–ª–∏–ª–æ —É—á–µ—Å—Ç—å —Å–ø–µ—Ü–∏—Ñ–∏–∫—É –∫–∞–∂–¥–æ–π —Ü–µ–ª–∏.
- –ù–∞ –≤—Ç–æ—Ä–æ–º —ç—Ç–∞–ø–µ, –ø–æ—Å–ª–µ –æ–±—É—á–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π, –±—ã–ª –ø—Ä–∏–º–µ–Ω–µ–Ω –æ—Ç–±–æ—Ä –Ω–∞ –æ—Å–Ω–æ–≤–µ SHAP-–∑–Ω–∞—á–µ–Ω–∏–π –¥–ª—è –¥–∞–ª—å–Ω–µ–π—à–µ–≥–æ —É—Ç–æ—á–Ω–µ–Ω–∏—è –Ω–∞–±–æ—Ä–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤.

**2.3. –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏ –≤–∞–ª–∏–¥–∞—Ü–∏—è –º–æ–¥–µ–ª–µ–π:**
- –î–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –ø—Ä–æ–≤–æ–¥–∏–ª–æ—Å—å —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –º–æ—â–Ω—ã—Ö –∞–ª–≥–æ—Ä–∏—Ç–º–æ–≤ (CatBoost, XGBoost) –∏ –∏—Ö –∞–Ω—Å–∞–º–±–ª—è (StackingClassifier).
- –ì–∏–ø–µ—Ä–ø–∞—Ä–∞–º–µ—Ç—Ä—ã –º–æ–¥–µ–ª–µ–π –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–ª–∏—Å—å —Å –ø–æ–º–æ—â—å—é `GridSearchCV` –Ω–∞ –∫—Ä–æ—Å—Å-–≤–∞–ª–∏–¥–∞—Ü–∏–∏ –¥–ª—è –ø–æ–∏—Å–∫–∞ –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
- **–ö–ª—é—á–µ–≤–æ–π –º–æ–º–µ–Ω—Ç:** —Ñ–∏–Ω–∞–ª—å–Ω–∞—è –º–æ–¥–µ–ª—å –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–∏ –±—ã–ª–∞ –ø–µ—Ä–µ–æ–±—É—á–µ–Ω–∞ –Ω–∞ –Ω–∞–±–æ—Ä–µ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤, –æ—Ç–æ–±—Ä–∞–Ω–Ω–æ–º –Ω–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–º —à–∞–≥–µ (SHAP). –≠—Ç–æ –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç, —á—Ç–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–µ –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã (–º–æ–¥–µ–ª—å –∏ —Å–ø–∏—Å–æ–∫ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤) –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω—ã –∏ –≥–æ—Ç–æ–≤—ã –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é.

### 3. –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –∏ –∏—Ö –∏–Ω—Ç–µ—Ä–ø—Ä–µ—Ç–∞—Ü–∏—è

**3.1. –ú–µ—Ç—Ä–∏–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞:**
- **R¬≤ (–∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç –¥–µ—Ç–µ—Ä–º–∏–Ω–∞—Ü–∏–∏):** –û—Å–Ω–æ–≤–Ω–∞—è –º–µ—Ç—Ä–∏–∫–∞ –¥–ª—è —Ä–µ–≥—Ä–µ—Å—Å–∏–∏. –ü–æ–∫–∞–∑—ã–≤–∞–µ—Ç –¥–æ–ª—é –¥–∏—Å–ø–µ—Ä—Å–∏–∏ –∑–∞–≤–∏—Å–∏–º–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π, –æ–±—ä—è—Å–Ω–µ–Ω–Ω—É—é –º–æ–¥–µ–ª—å—é. –ó–Ω–∞—á–µ–Ω–∏–µ 0.78 –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –º–æ–¥–µ–ª—å –æ–ø–∏—Å—ã–≤–∞–µ—Ç 78% –∑–∞–∫–æ–Ω–æ–º–µ—Ä–Ω–æ—Å—Ç–µ–π –≤ –¥–∞–Ω–Ω—ã—Ö.
- **ROC AUC:** –ö–ª—é—á–µ–≤–∞—è –º–µ—Ç—Ä–∏–∫–∞ –¥–ª—è –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏. –û—Ç—Ä–∞–∂–∞–µ—Ç —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å –º–æ–¥–µ–ª–∏ –æ—Ç–ª–∏—á–∞—Ç—å –æ–¥–∏–Ω –∫–ª–∞—Å—Å –æ—Ç –¥—Ä—É–≥–æ–≥–æ. –ó–Ω–∞—á–µ–Ω–∏–µ 0.9+ —è–≤–ª—è–µ—Ç—Å—è –ø–æ–∫–∞–∑–∞—Ç–µ–ª–µ–º –ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω–æ–π —Ä–∞–∑–¥–µ–ª—è—é—â–µ–π —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç–∏.

**3.2. –ò—Ç–æ–≥–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –º–æ–¥–µ–ª–µ–π:**

üìà **–†–µ–≥—Ä–µ—Å—Å–∏—è:**
{tabulate(regression_table, headers=["–ó–∞–¥–∞—á–∞", "R¬≤", "RMSE", "MAE"], tablefmt="grid")}

‚úÖ **–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è:**
{tabulate(classification_table, headers=["–ó–∞–¥–∞—á–∞", "ROC AUC", "F1", "Accuracy"], tablefmt="grid")}

**3.3. –ê–Ω–∞–ª–∏–∑ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –ø–æ –∑–∞–¥–∞—á–∞–º:**
"""

# –î–æ–±–∞–≤–ª—è–µ–º –≤—ã–≤–æ–¥—ã –ø–æ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ
for row in regression_table:
    report_text += f"\n- **{row[0]}:** –ú–æ–¥–µ–ª—å –ø—Ä–æ–¥–µ–º–æ–Ω—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª–∞ **—Ö–æ—Ä–æ—à—É—é** –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å–Ω—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å, –æ–±—ä—è—Å–Ω—è—è {float(row[1])*100:.1f}% –≤–∞—Ä–∏–∞—Ç–∏–≤–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö (R¬≤={row[1]})."
for row in classification_table:
    report_text += f"\n- **{row[0]}:** –ú–æ–¥–µ–ª—å –ø–æ–∫–∞–∑–∞–ª–∞ **–ø—Ä–µ–≤–æ—Å—Ö–æ–¥–Ω—É—é** —Ä–∞–∑–¥–µ–ª—è—é—â—É—é —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—å (ROC AUC={row[1]}), —á—Ç–æ –≥–æ–≤–æ—Ä–∏—Ç –æ –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç–∏ –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π."

report_text += """

### 4. –û–±—â–∏–π –≤—ã–≤–æ–¥ –∏ –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∞—è –∑–Ω–∞—á–∏–º–æ—Å—Ç—å

–ü—Ä–æ–≤–µ–¥–µ–Ω–Ω–æ–µ –∏—Å—Å–ª–µ–¥–æ–≤–∞–Ω–∏–µ –ø–æ–∫–∞–∑–∞–ª–æ, —á—Ç–æ –Ω–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö —Ö–∏–º–∏—á–µ—Å–∫–∏—Ö –¥–µ—Å–∫—Ä–∏–ø—Ç–æ—Ä–æ–≤ –º–æ–∂–Ω–æ —Å –≤—ã—Å–æ–∫–æ–π —Ç–æ—á–Ω–æ—Å—Ç—å—é –ø—Ä–æ–≥–Ω–æ–∑–∏—Ä–æ–≤–∞—Ç—å –∫–∞–∫ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π (IC50, CC50, SI), —Ç–∞–∫ –∏ –∏—Ö –ø—Ä–∏–Ω–∞–¥–ª–µ–∂–Ω–æ—Å—Ç—å –∫ –∫–ª–∞—Å—Å–∞–º (–Ω–∞–ø—Ä–∏–º–µ—Ä, —Ç–æ–∫—Å–∏—á–Ω—ã–µ/–Ω–µ—Ç–æ–∫—Å–∏—á–Ω—ã–µ).

**–†–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –º–æ–¥–µ–ª–∏ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—Ç —Å–æ–±–æ–π –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —É—Å–∫–æ—Ä–µ–Ω–∏—è –∏ —É–¥–µ—à–µ–≤–ª–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ R&D –Ω–æ–≤—ã—Ö –ª–µ–∫–∞—Ä—Å—Ç–≤–µ–Ω–Ω—ã—Ö –ø—Ä–µ–ø–∞—Ä–∞—Ç–æ–≤.** –û–Ω–∏ –ø–æ–∑–≤–æ–ª—è—é—Ç:
1.  **–ü—Ä–æ–≤–æ–¥–∏—Ç—å –ø–µ—Ä–≤–∏—á–Ω—ã–π —Å–∫—Ä–∏–Ω–∏–Ω–≥ `in silico`:** –í–º–µ—Å—Ç–æ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è —Ç—ã—Å—è—á –¥–æ—Ä–æ–≥–∏—Ö –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤, —Ö–∏–º–∏–∫–∏ –º–æ–≥—É—Ç —Å–Ω–∞—á–∞–ª–∞ –æ—Ü–µ–Ω–∏—Ç—å –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π —Å –ø–æ–º–æ—â—å—é –º–æ–¥–µ–ª–µ–π.
2.  **–°–Ω–∏–∂–∞—Ç—å –∑–∞—Ç—Ä–∞—Ç—ã:** –ú–æ–¥–µ–ª–∏ —Å–ø–æ—Å–æ–±–Ω—ã –æ—Ç—Å–µ—è—Ç—å –ø–æ–¥–∞–≤–ª—è—é—â–µ–µ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ –±–µ—Å–ø–µ—Ä—Å–ø–µ–∫—Ç–∏–≤–Ω—ã—Ö –∫–∞–Ω–¥–∏–¥–∞—Ç–æ–≤, –ø–æ–∑–≤–æ–ª—è—è —Å—Ñ–æ–∫—É—Å–∏—Ä–æ–≤–∞—Ç—å —Ä–µ—Å—É—Ä—Å—ã –Ω–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è—Ö —Å –Ω–∞–∏–±–æ–ª—å—à–µ–π –≤–µ—Ä–æ—è—Ç–Ω–æ—Å—Ç—å—é —É—Å–ø–µ—Ö–∞.
3.  **–ü—Ä–∏–Ω–∏–º–∞—Ç—å –æ–±–æ—Å–Ω–æ–≤–∞–Ω–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è:** –ù–∞ –æ—Å–Ω–æ–≤–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π –º–æ–∂–Ω–æ –±–æ–ª–µ–µ —Ü–µ–ª–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–Ω–æ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –¥–∞–ª—å–Ω–µ–π—à–∏–µ —ç—Ç–∞–ø—ã —Å–∏–Ω—Ç–µ–∑–∞ –∏ –±–∏–æ–ª–æ–≥–∏—á–µ—Å–∫–∏—Ö –∏—Å–ø—ã—Ç–∞–Ω–∏–π.

–¢–∞–∫–∏–º –æ–±—Ä–∞–∑–æ–º, –ø—Ä–æ–¥–µ–ª–∞–Ω–Ω–∞—è —Ä–∞–±–æ—Ç–∞ —è–≤–ª—è–µ—Ç—Å—è —É—Å–ø–µ—à–Ω—ã–º –ø—Ä–∏–º–µ—Ä–æ–º –ø—Ä–∏–º–µ–Ω–µ–Ω–∏—è –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–æ–≥–æ –º–∞—à–∏–Ω–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è –¥–ª—è —Ä–µ—à–µ–Ω–∏—è –∞–∫—Ç—É–∞–ª—å–Ω—ã—Ö –∑–∞–¥–∞—á –≤ –æ–±–ª–∞—Å—Ç–∏ —Ñ–∞—Ä–º–∞—Ü–µ–≤—Ç–∏–∫–∏.

### 5. –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –¥–∞–ª—å–Ω–µ–π—à–µ–π —Ä–∞–±–æ—Ç–µ

–î–ª—è –ø–æ—Ç–µ–Ω—Ü–∏–∞–ª—å–Ω–æ–≥–æ —É–ª—É—á—à–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –º–æ–∂–Ω–æ —Ä–∞—Å—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ª–µ–¥—É—é—â–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è:
- **–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π:** –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–π—Ä–æ—Å–µ—Ç–µ–≤—ã–µ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã, —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –º–æ–ª–µ–∫—É–ª—è—Ä–Ω—ã–º–∏ –≥—Ä–∞—Ñ–∞–º–∏ (Graph Neural Networks).
- **–†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –Ω–∞–±–æ—Ä–∞ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤:** –ü—Ä–∏–≤–ª–µ—á—å —ç–∫—Å–ø–µ—Ä—Ç–æ–≤-—Ö–∏–º–∏–∫–æ–≤ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö –¥–æ–º–µ–Ω–Ω—ã—Ö –ø—Ä–∏–∑–Ω–∞–∫–æ–≤.
- **–°–æ–∑–¥–∞–Ω–∏–µ API/–≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞:** –†–∞–∑–≤–µ—Ä–Ω—É—Ç—å –ª—É—á—à—É—é –º–æ–¥–µ–ª—å –∫–∞–∫ —Å–µ—Ä–≤–∏—Å, —á—Ç–æ–±—ã —Ö–∏–º–∏–∫–∏ –º–æ–≥–ª–∏ –≤ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ–º —Ä–µ–∂–∏–º–µ –ø–æ–ª—É—á–∞—Ç—å –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–ª—è –Ω–æ–≤—ã—Ö —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π.
"""

# --- –í—ã–≤–æ–¥ –æ—Ç—á–µ—Ç–∞ –≤ –∫–æ–Ω—Å–æ–ª—å –∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª ---
print(report_text)
with open("final_report.txt", "w", encoding="utf-8") as f:
    f.write(report_text)
print("\n[i] –ü–æ–ª–Ω—ã–π —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ —Ñ–∞–π–ª: final_report.txt")